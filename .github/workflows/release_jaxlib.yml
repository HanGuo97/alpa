name: Release Jaxlib

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tensorflow:
        description: 'TensorFlow-alpa branch to build'
        required: true
        default: 'master'


jobs:

  clean-up:
    runs-on: [self-hosted]

    steps:
      - name: clean up images
        run: |
          docker image prune -f

  build-jaxlib:
    runs-on: [self-hosted]
    needs: [clean-up]
    strategy:
      matrix:
        cuda: ["11.1", "11.2", "11.3"]
        python: ["3.7", "3.8", "3.9"]

    steps:
      - uses: actions/checkout@v3

      - name: build image
        run: |
          docker build -t build-jaxlib-image-cuda${CUDA_VERSION} \
            -f docker/build_jaxlib.Dockerfile docker/ \
            --build-arg JAX_CUDA_VERSION=${CUDA_VERSION}
        env:
          CUDA_VERSION: ${{ matrix.cuda }}

      - name: Compile Jaxlib
        run: |
          mkdir -p /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}
          if [[ ${{ github.event.action }} == "release" ]]; then
            docker run --gpus all --tmpfs /build:exec \
              --rm -v /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}:/dist \
              build-jaxlib-image-cuda${CUDA_VERSION} ${PYTHON_VERSION} \
              cuda ${CUDA_VERSION}
          else
            docker run --gpus all --tmpfs /build:exec \
              --rm -v /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}:/dist \
              build-jaxlib-image-cuda${CUDA_VERSION} ${PYTHON_VERSION} \
              cuda ${CUDA_VERSION} ${{ github.event.inputs.tensorflow }}
          fi

        env:
          CUDA_VERSION: ${{ matrix.cuda }}
          PYTHON_VERSION: ${{ matrix.python }}

  publish:
    runs-on: [self-hosted]
    needs: [build-jaxlib]
    strategy:
      matrix:
        cuda: ["11.1", "11.2", "11.3"]
    steps:

    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install github3.py
        tag=$(head -n 1 VERSION)
        

    - name: Publish CUDA${{ matrix.cuda }}
      run: |
        echo "Publish jaxlib"
        ls /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}
        
        mv /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}/*.whl /data/alpa-pypi/packages/
      env:
        CUDA_VERSION: ${{ matrix.cuda }}
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
