name: Release Jaxlib exp

on:
  release:
    types: [created]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      tensorflow:
        description: 'TensorFlow-alpa branch to build'
        required: true
        default: 'master'


jobs:

  clean-up:
    runs-on: [self-hosted]

    steps:
      - name: clean up images
        run: |
          docker image prune -f

  build-jaxlib:
    runs-on: [self-hosted]
    needs: [clean-up]
    strategy:
      matrix:
        cuda: ["11.1", "11.2", "11.3"]
        python: ["3.7", "3.8", "3.9"]

    steps:
      - uses: actions/checkout@v3

      - name: build image
        run: |
          docker build -t build-jaxlib-image-cuda${CUDA_VERSION} \
            -f docker/build_jaxlib.Dockerfile docker/ \
            --build-arg JAX_CUDA_VERSION=${CUDA_VERSION}
        env:
          CUDA_VERSION: ${{ matrix.cuda }}

      - name: Compile Jaxlib
        run: |
          mkdir -p /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}
          if [[ ${{ github.event_name }} == "pull_request" ]]; then
            echo ${{ github.event_name }}
            echo ${{ github.event }}
            echo ${{ github.action }}
            echo ${CUDA_VERSION}
            echo ${ALPA_BRANCH}
          else
            echo ${{ github.event_name }}
            echo ${{ github.event }}
            echo ${{ github.action }}
            echo ${CUDA_VERSION}
            echo ${ALPA_BRANCH}
            echo ${TF_BRANCH}
          fi
        env:
          CUDA_VERSION: ${{ matrix.cuda }}
          PYTHON_VERSION: ${{ matrix.python }}
          ALPA_BRANCH: ${{ github.ref }}
          TF_BRANCH: ${{ github.event.inputs.tensorflow }}

  publish:
    runs-on: [self-hosted]
    needs: [build-jaxlib]
    strategy:
      matrix:
        cuda: ["11.1", "11.2", "11.3"]
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install github3.py requests

      - name: Get latest tag
        id: latesttag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Upload wheels for CUDA${{ matrix.cuda }}
        run: |
          echo "Publish jaxlib to tag ${TAG}"
          ls /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.}
          echo "Upload wheels to tag ${TAG}"
          python build_jaxlib/release/wheel_upload.py --tag ${TAG} --path /data/alpa-dist/jaxlib-alpa/cuda${CUDA_VERSION//.} --dry-run
        env:
          CUDA_VERSION: ${{ matrix.cuda }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          TAG: ${{ steps.latesttag.outputs.tag }}

      - uses: actions/checkout@v3
        name: "Checkout doc repo"
        with:
          repository: "alpa-projects/alpa-projects.github.io"

      - name: "Generate"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          TAG: ${{ steps.latesttag.outputs.tag }}
        run:
          ls -ltr
          cd ..
          python build_jaxlib/release/generate_pypi_index.py --tag ${TAG} --dry-run
